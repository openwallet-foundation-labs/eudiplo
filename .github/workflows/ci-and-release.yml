name: CI / Docker Release

on:
  push:
    branches: ['main']
  pull_request:
    types: [opened, synchronize, reopened]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  main:
    name: Main CI Pipeline
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          filter: tree:0

      - name: Fetch base branch for comparison
        if: github.event_name == 'pull_request'
        run: git fetch origin main:main

      - name: Copy env file
        run: cp .env.example .env

      - name: Setup Node + pnpm
        uses: ./.github/actions/pnpm-setup
        with:
          node-version: 22

      - name: Set up Nx SHAs
        uses: nrwl/nx-set-shas@v4
        with:
          main-branch-name: main

      - name: Run affected linting
        run: pnpm exec nx affected -t lint

      - name: Run license check
        run: pnpm dlx license-checker --onlyAllow "MIT;Apache-2.0;BSD-2-Clause;BSD-3-Clause;0BSD"

      - name: Run affected builds and tests
        run: pnpm exec nx affected -t build,test

      - name: Build affected containers (validation only)
        if: github.event_name == 'pull_request'
        run: pnpm exec nx affected -t container
        env:
          NX_CONTAINER_REGISTRY: ghcr.io/openwallet-foundation-labs

      - run: npx nx-cloud fix-ci
        if: always()

  documentation:
    name: Build Documentation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Fetch base branch for comparison
        if: github.event_name == 'pull_request'
        run: git fetch origin main:main

      - name: Copy env file
        run: cp .env.example .env

      - name: Setup Node + pnpm
        uses: ./.github/actions/pnpm-setup
        with:
          node-version: 22

      - name: Set up Nx SHAs
        uses: nrwl/nx-set-shas@v4
        with:
          main-branch-name: main

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Python dependencies
        run: pip install -r requirements.txt

      - name: Build documentation
        run: pnpm run doc:build

      - name: Upload built documentation
        uses: actions/upload-artifact@v4
        with:
          name: generated-docs
          path: site/

      - run: npx nx-cloud fix-ci
        if: always()

  test-e2e:
    name: E2E Tests
    runs-on: ubuntu-latest
    needs: [main]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Fetch base branch for comparison
        if: github.event_name == 'pull_request'
        run: git fetch origin main:main

      - name: Add entry to /etc/hosts
        run: echo "127.0.0.1 host.testcontainers.internal" | sudo tee -a /etc/hosts

      - name: Copy env file
        run: cp .env.example .env

      - name: Setup Node + pnpm
        uses: ./.github/actions/pnpm-setup
        with:
          node-version: 22

      - name: setup test webhooks
        run: |
          cd test/webhook
          pnpm install --frozen-lockfile
          nohup pnpm run start &
        # if test/webhook isn't part of the workspace, include a minimal package.json there

      - name: Set up Nx SHAs
        uses: nrwl/nx-set-shas@v4
        with:
          main-branch-name: main

      - name: Run affected E2E tests
        run: pnpm exec nx affected -t test:e2e

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage-e2e/coverage-final.json
          flags: e2e-test
          name: codecov-umbrella
          fail_ci_if_error: false

      - name: Upload test results to Codecov
        if: ${{ !cancelled() }}
        uses: codecov/test-results-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      - run: npx nx-cloud fix-ci
        if: always()

  docker-main:
    name: Build & Push Container Images
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    needs: [main, test-e2e]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Copy env file
        run: cp .env.example .env

      - name: Setup Node + pnpm
        uses: ./.github/actions/pnpm-setup
        with:
          node-version: 22
          # example: if your workspace root isn't repo root
          # working-directory: ./apps/backend

      - name: Set up Nx SHAs
        uses: nrwl/nx-set-shas@v4
        with:
          main-branch-name: main

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push affected containers to registry
        run: pnpm exec nx affected -t container --configuration=ci
        env:
          NX_CONTAINER_REGISTRY: ghcr.io/openwallet-foundation-labs
          INPUT_REGISTRY: ghcr.io
          INPUT_USERNAME: ${{ github.actor }}
          INPUT_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
