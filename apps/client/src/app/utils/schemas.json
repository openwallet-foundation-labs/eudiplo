[
  {
    "uri": "https://raw.githubusercontent.com/openwallet-foundation-labs/eudiplo/refs/heads/main/schemas/Oauth2AuthorizationServerResponse.schema.json",
    "fileMatch": ["a://b/Oauth2AuthorizationServerResponse.schema.json"],
    "schema": {
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "$id": "https://raw.githubusercontent.com/openwallet-foundation-labs/eudiplo/refs/heads/main/schemas/Oauth2AuthorizationServerResponse.schema.json",
      "title": "Oauth2AuthorizationServerResponse",
      "type": "object",
      "properties": {
        "issuer": {
          "type": "string"
        },
        "token_endpoint": {
          "type": "string",
          "description": "The URL of the OAuth2 authorization server's token endpoint."
        },
        "authorization_endpoint": {
          "type": "string",
          "description": "The URL of the OAuth2 authorization server's authorization endpoint."
        },
        "jwks_uri": {
          "type": "string",
          "description": "The URL of the OAuth2 authorization server's jwks (JSON Web Key Set) endpoint."
        },
        "code_challenge_methods_supported": {
          "description": "List of supported algorithms to sign the challenge",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "dpop_signing_alg_values_supported": {
          "description": "List of supported algorithms for DPoP signing.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "require_pushed_authorization_requests": {
          "type": "boolean",
          "description": "Indicates whether the server requires pushed authorization requests."
        },
        "pushed_authorization_request_endpoint": {
          "type": "string",
          "description": "The URL of the pushed authorization request endpoint."
        },
        "authorization_challenge_endpoint": {
          "type": "string",
          "description": "The URL of the authorization challenge endpoint."
        }
      },
      "required": [
        "issuer",
        "token_endpoint",
        "authorization_endpoint",
        "jwks_uri",
        "code_challenge_methods_supported",
        "dpop_signing_alg_values_supported",
        "require_pushed_authorization_requests",
        "pushed_authorization_request_endpoint",
        "authorization_challenge_endpoint"
      ]
    }
  },
  {
    "uri": "https://raw.githubusercontent.com/openwallet-foundation-labs/eudiplo/refs/heads/main/schemas/EC_Public.schema.json",
    "fileMatch": ["a://b/EC_Public.schema.json"],
    "schema": {
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "$id": "https://raw.githubusercontent.com/openwallet-foundation-labs/eudiplo/refs/heads/main/schemas/EC_Public.schema.json",
      "title": "EC_Public",
      "type": "object",
      "properties": {
        "kty": {
          "type": "string",
          "description": "The key type, which is always 'EC' for Elliptic Curve keys."
        },
        "crv": {
          "type": "string",
          "description": "The algorithm intended for use with the key, such as 'ES256'."
        },
        "x": {
          "type": "string",
          "description": "The x coordinate of the EC public key."
        },
        "y": {
          "type": "string",
          "description": "The y coordinate of the EC public key."
        }
      },
      "required": ["kty", "crv", "x", "y"]
    }
  },
  {
    "uri": "https://raw.githubusercontent.com/openwallet-foundation-labs/eudiplo/refs/heads/main/schemas/JwksResponseDto.schema.json",
    "fileMatch": ["a://b/JwksResponseDto.schema.json"],
    "schema": {
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "$id": "https://raw.githubusercontent.com/openwallet-foundation-labs/eudiplo/refs/heads/main/schemas/JwksResponseDto.schema.json",
      "title": "JwksResponseDto",
      "type": "object",
      "properties": {
        "keys": {
          "description": "An array of EC public keys in JWK format.",
          "type": "array",
          "items": {
            "$ref": "./EC_Public.schema.json"
          }
        }
      },
      "required": ["keys"]
    }
  },
  {
    "uri": "https://raw.githubusercontent.com/openwallet-foundation-labs/eudiplo/refs/heads/main/schemas/CertEntity.schema.json",
    "fileMatch": ["a://b/CertEntity.schema.json"],
    "schema": {
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "$id": "https://raw.githubusercontent.com/openwallet-foundation-labs/eudiplo/refs/heads/main/schemas/CertEntity.schema.json",
      "title": "CertEntity",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the key."
        },
        "tenantId": {
          "type": "string",
          "description": "Tenant ID for the key."
        },
        "crt": {
          "type": "string",
          "description": "Certificate in PEM format."
        },
        "type": {
          "type": "object",
          "description": "Type of the certificate (access or signing)."
        },
        "description": {
          "type": "string",
          "description": "Description of the key."
        },
        "createdAt": {
          "format": "date-time",
          "type": "string",
          "description": "The timestamp when the VP request was created."
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string",
          "description": "The timestamp when the VP request was last updated."
        }
      },
      "required": ["id", "tenantId", "crt", "type", "createdAt", "updatedAt"]
    }
  },
  {
    "uri": "https://raw.githubusercontent.com/openwallet-foundation-labs/eudiplo/refs/heads/main/schemas/Key.schema.json",
    "fileMatch": ["a://b/Key.schema.json"],
    "schema": {
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "$id": "https://raw.githubusercontent.com/openwallet-foundation-labs/eudiplo/refs/heads/main/schemas/Key.schema.json",
      "title": "Key",
      "type": "object",
      "properties": {
        "kid": {
          "type": "string"
        },
        "kty": {
          "type": "string"
        },
        "x": {
          "type": "string"
        },
        "y": {
          "type": "string"
        },
        "crv": {
          "type": "string"
        },
        "d": {
          "type": "string"
        },
        "alg": {
          "type": "string"
        }
      },
      "required": ["kid", "kty", "x", "y", "crv", "d", "alg"]
    }
  },
  {
    "uri": "https://raw.githubusercontent.com/openwallet-foundation-labs/eudiplo/refs/heads/main/schemas/KeyImportDto.schema.json",
    "fileMatch": ["a://b/KeyImportDto.schema.json"],
    "schema": {
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "$id": "https://raw.githubusercontent.com/openwallet-foundation-labs/eudiplo/refs/heads/main/schemas/KeyImportDto.schema.json",
      "title": "KeyImportDto",
      "type": "object",
      "properties": {
        "privateKey": {
          "description": "The private key in JWK format.",
          "allOf": [
            {
              "$ref": "./Key.schema.json"
            }
          ]
        },
        "crt": {
          "type": "string",
          "description": "Optional certificate in PEM format."
        },
        "description": {
          "type": "string",
          "description": "Description of the key."
        }
      },
      "required": ["privateKey"]
    }
  },
  {
    "uri": "https://raw.githubusercontent.com/openwallet-foundation-labs/eudiplo/refs/heads/main/schemas/UpdateKeyDto.schema.json",
    "fileMatch": ["a://b/UpdateKeyDto.schema.json"],
    "schema": {
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "$id": "https://raw.githubusercontent.com/openwallet-foundation-labs/eudiplo/refs/heads/main/schemas/UpdateKeyDto.schema.json",
      "title": "UpdateKeyDto",
      "type": "object",
      "properties": {
        "crt": {
          "type": "string",
          "description": "Optional certificate in PEM format."
        },
        "description": {
          "type": "string",
          "description": "Description of the key."
        }
      }
    }
  },
  {
    "uri": "https://raw.githubusercontent.com/openwallet-foundation-labs/eudiplo/refs/heads/main/schemas/NotificationRequestDto.schema.json",
    "fileMatch": ["a://b/NotificationRequestDto.schema.json"],
    "schema": {
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "$id": "https://raw.githubusercontent.com/openwallet-foundation-labs/eudiplo/refs/heads/main/schemas/NotificationRequestDto.schema.json",
      "title": "NotificationRequestDto",
      "type": "object",
      "properties": {
        "notification_id": {
          "type": "string"
        },
        "event": {
          "type": "object"
        }
      },
      "required": ["notification_id", "event"]
    }
  },
  {
    "uri": "https://raw.githubusercontent.com/openwallet-foundation-labs/eudiplo/refs/heads/main/schemas/AuthorizeQueries.schema.json",
    "fileMatch": ["a://b/AuthorizeQueries.schema.json"],
    "schema": {
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "$id": "https://raw.githubusercontent.com/openwallet-foundation-labs/eudiplo/refs/heads/main/schemas/AuthorizeQueries.schema.json",
      "title": "AuthorizeQueries",
      "type": "object",
      "properties": {
        "issuer_state": {
          "type": "string"
        },
        "response_type": {
          "type": "string"
        },
        "client_id": {
          "type": "string"
        },
        "redirect_uri": {
          "type": "string"
        },
        "resource": {
          "type": "string"
        },
        "scope": {
          "type": "string"
        },
        "code_challenge": {
          "type": "string"
        },
        "code_challenge_method": {
          "type": "string"
        },
        "dpop_jkt": {
          "type": "string"
        },
        "request_uri": {
          "type": "string"
        },
        "auth_session": {
          "type": "string"
        }
      }
    }
  },
  {
    "uri": "https://raw.githubusercontent.com/openwallet-foundation-labs/eudiplo/refs/heads/main/schemas/ParResponseDto.schema.json",
    "fileMatch": ["a://b/ParResponseDto.schema.json"],
    "schema": {
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "$id": "https://raw.githubusercontent.com/openwallet-foundation-labs/eudiplo/refs/heads/main/schemas/ParResponseDto.schema.json",
      "title": "ParResponseDto",
      "type": "object",
      "properties": {
        "request_uri": {
          "type": "string",
          "description": "The request URI for the Pushed Authorization Request."
        },
        "expires_in": {
          "type": "number",
          "description": "The expiration time for the request URI in seconds."
        }
      },
      "required": ["request_uri", "expires_in"]
    }
  },
  {
    "uri": "https://raw.githubusercontent.com/openwallet-foundation-labs/eudiplo/refs/heads/main/schemas/VCT.schema.json",
    "fileMatch": ["a://b/VCT.schema.json"],
    "schema": {
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "$id": "https://raw.githubusercontent.com/openwallet-foundation-labs/eudiplo/refs/heads/main/schemas/VCT.schema.json",
      "title": "VCT",
      "type": "object",
      "properties": {
        "vct": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "extends": {
          "type": "string"
        },
        "extends#integrity": {
          "type": "string"
        },
        "schema_uri": {
          "type": "string"
        },
        "schema_uri#integrity": {
          "type": "string"
        }
      }
    }
  },
  {
    "uri": "https://raw.githubusercontent.com/openwallet-foundation-labs/eudiplo/refs/heads/main/schemas/SchemaResponse.schema.json",
    "fileMatch": ["a://b/SchemaResponse.schema.json"],
    "schema": {
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "$id": "https://raw.githubusercontent.com/openwallet-foundation-labs/eudiplo/refs/heads/main/schemas/SchemaResponse.schema.json",
      "title": "SchemaResponse",
      "type": "object",
      "properties": {
        "$schema": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "properties": {
          "type": "object"
        },
        "required": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      },
      "required": ["$schema", "type", "properties"]
    }
  },
  {
    "uri": "https://raw.githubusercontent.com/openwallet-foundation-labs/eudiplo/refs/heads/main/schemas/CredentialConfig.schema.json",
    "fileMatch": ["a://b/CredentialConfig.schema.json"],
    "schema": {
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "$id": "https://raw.githubusercontent.com/openwallet-foundation-labs/eudiplo/refs/heads/main/schemas/CredentialConfig.schema.json",
      "title": "CredentialConfig",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "config": {
          "type": "object"
        },
        "claims": {
          "type": "object"
        },
        "disclosureFrame": {
          "type": "object"
        },
        "vct": {
          "$ref": "./VCT.schema.json"
        },
        "keyBinding": {
          "type": "boolean"
        },
        "keyId": {
          "type": "string"
        },
        "key": {
          "$ref": "./CertEntity.schema.json"
        },
        "statusManagement": {
          "type": "boolean"
        },
        "lifeTime": {
          "type": "number"
        },
        "schema": {
          "$ref": "./SchemaResponse.schema.json"
        },
        "embeddedDisclosurePolicy": {
          "type": "object",
          "description": "Embedded disclosure policy (discriminated union by `policy`).\nThe discriminator makes class-transformer instantiate the right subclass,\nand then class-validator runs that subclass’s rules."
        },
        "credentialIssuanceBindings": {
          "type": "array",
          "items": {
            "$ref": "./CredentialIssuanceBinding.schema.json"
          }
        }
      },
      "required": ["id", "config", "key", "credentialIssuanceBindings"]
    }
  },
  {
    "uri": "https://raw.githubusercontent.com/openwallet-foundation-labs/eudiplo/refs/heads/main/schemas/AuthenticationConfigDto.schema.json",
    "fileMatch": ["a://b/AuthenticationConfigDto.schema.json"],
    "schema": {
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "$id": "https://raw.githubusercontent.com/openwallet-foundation-labs/eudiplo/refs/heads/main/schemas/AuthenticationConfigDto.schema.json",
      "title": "AuthenticationConfigDto",
      "type": "object",
      "properties": {
        "method": {
          "type": "string",
          "description": "The authentication method to use:\n- 'none': Pre-authorized code flow (no user authentication)\n- 'auth': OID4VCI authorized code flow (user redirect for authentication)\n- 'presentationDuringIssuance': OID4VP flow (credential presentation required)",
          "enum": ["none", "auth", "presentationDuringIssuance"]
        },
        "config": {
          "type": "object",
          "description": "Configuration specific to the selected authentication method\n- For 'none': no config needed (undefined) - uses pre-authorized code flow\n- For 'auth': AuthenticationUrlConfig - for OID4VCI authorized code flow\n- For 'presentationDuringIssuance': PresentationDuringIssuanceConfig - for OID4VP flow"
        }
      },
      "required": ["method"]
    }
  },
  {
    "uri": "https://raw.githubusercontent.com/openwallet-foundation-labs/eudiplo/refs/heads/main/schemas/ApiKeyConfig.schema.json",
    "fileMatch": ["a://b/ApiKeyConfig.schema.json"],
    "schema": {
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "$id": "https://raw.githubusercontent.com/openwallet-foundation-labs/eudiplo/refs/heads/main/schemas/ApiKeyConfig.schema.json",
      "title": "ApiKeyConfig",
      "type": "object",
      "properties": {
        "headerName": {
          "type": "string",
          "description": "The name of the header where the API key will be sent."
        },
        "value": {
          "type": "string",
          "description": "The value of the API key to be sent in the header."
        }
      },
      "required": ["headerName", "value"]
    }
  },
  {
    "uri": "https://raw.githubusercontent.com/openwallet-foundation-labs/eudiplo/refs/heads/main/schemas/WebHookAuthConfig.schema.json",
    "fileMatch": ["a://b/WebHookAuthConfig.schema.json"],
    "schema": {
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "$id": "https://raw.githubusercontent.com/openwallet-foundation-labs/eudiplo/refs/heads/main/schemas/WebHookAuthConfig.schema.json",
      "title": "WebHookAuthConfig",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "The type of authentication used for the webhook.\nCurrently, only 'apiKey' is supported.",
          "enum": ["apiKey"]
        },
        "config": {
          "description": "Configuration for API key authentication.\nThis is required if the type is 'apiKey'.",
          "allOf": [
            {
              "$ref": "./ApiKeyConfig.schema.json"
            }
          ]
        }
      },
      "required": ["type", "config"]
    }
  },
  {
    "uri": "https://raw.githubusercontent.com/openwallet-foundation-labs/eudiplo/refs/heads/main/schemas/WebhookConfig.schema.json",
    "fileMatch": ["a://b/WebhookConfig.schema.json"],
    "schema": {
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "$id": "https://raw.githubusercontent.com/openwallet-foundation-labs/eudiplo/refs/heads/main/schemas/WebhookConfig.schema.json",
      "title": "WebhookConfig",
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "description": "The URL to which the webhook will send notifications."
        },
        "auth": {
          "description": "Optional authentication configuration for the webhook.\nIf not provided, no authentication will be used.",
          "allOf": [
            {
              "$ref": "./WebHookAuthConfig.schema.json"
            }
          ]
        }
      },
      "required": ["url"]
    }
  },
  {
    "uri": "https://raw.githubusercontent.com/openwallet-foundation-labs/eudiplo/refs/heads/main/schemas/IssuanceConfig.schema.json",
    "fileMatch": ["a://b/IssuanceConfig.schema.json"],
    "schema": {
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "$id": "https://raw.githubusercontent.com/openwallet-foundation-labs/eudiplo/refs/heads/main/schemas/IssuanceConfig.schema.json",
      "title": "IssuanceConfig",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the issuance configuration."
        },
        "description": {
          "type": "string",
          "description": "Description of the issuance configuration."
        },
        "credentialIssuanceBindings": {
          "description": "Links to all credential config bindings that are included in this issuance config.",
          "type": "array",
          "items": {
            "$ref": "./CredentialIssuanceBinding.schema.json"
          }
        },
        "authenticationConfig": {
          "description": "Authentication configuration for the issuance process.\nThis determines which OpenID4VC flow to use:\n- 'none': Pre-authorized code flow (no user authentication required)\n- 'auth': OID4VCI authorized code flow (user will be redirected for authentication)\n- 'presentationDuringIssuance': OID4VP request is sent (credential presentation required)",
          "allOf": [
            {
              "$ref": "./AuthenticationConfigDto.schema.json"
            }
          ]
        },
        "createdAt": {
          "format": "date-time",
          "type": "string",
          "description": "The timestamp when the VP request was created."
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string",
          "description": "The timestamp when the VP request was last updated."
        },
        "claimsWebhook": {
          "description": "Webhook to receive claims for the issuance process.",
          "allOf": [
            {
              "$ref": "./WebhookConfig.schema.json"
            }
          ]
        },
        "notifyWebhook": {
          "description": "Webhook to send the result of the notification response",
          "allOf": [
            {
              "$ref": "./WebhookConfig.schema.json"
            }
          ]
        },
        "batch_size": {
          "type": "number",
          "description": "Value to determine the amount of credentials that are issued in a batch.\nDefault is 1."
        }
      },
      "required": [
        "id",
        "credentialIssuanceBindings",
        "authenticationConfig",
        "createdAt",
        "updatedAt"
      ]
    }
  },
  {
    "uri": "https://raw.githubusercontent.com/openwallet-foundation-labs/eudiplo/refs/heads/main/schemas/CredentialIssuanceBinding.schema.json",
    "fileMatch": ["a://b/CredentialIssuanceBinding.schema.json"],
    "schema": {
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "$id": "https://raw.githubusercontent.com/openwallet-foundation-labs/eudiplo/refs/heads/main/schemas/CredentialIssuanceBinding.schema.json",
      "title": "CredentialIssuanceBinding",
      "type": "object",
      "properties": {
        "credentialConfigId": {
          "type": "string",
          "description": "Binding key for the credential configuration."
        },
        "issuanceConfigId": {
          "type": "string",
          "description": "Binding key for the issuance configuration."
        },
        "credentialConfig": {
          "description": "Reference to the credential configuration.",
          "allOf": [
            {
              "$ref": "./CredentialConfig.schema.json"
            }
          ]
        },
        "issuanceConfig": {
          "description": "Reference to the issuance configuration.",
          "allOf": [
            {
              "$ref": "./IssuanceConfig.schema.json"
            }
          ]
        },
        "createdAt": {
          "format": "date-time",
          "type": "string",
          "description": "The timestamp when the VP request was created."
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string",
          "description": "The timestamp when the VP request was last updated."
        }
      },
      "required": [
        "credentialConfigId",
        "issuanceConfigId",
        "credentialConfig",
        "issuanceConfig",
        "createdAt",
        "updatedAt"
      ]
    }
  },
  {
    "uri": "https://raw.githubusercontent.com/openwallet-foundation-labs/eudiplo/refs/heads/main/schemas/CredentialConfigCreate.schema.json",
    "fileMatch": ["a://b/CredentialConfigCreate.schema.json"],
    "schema": {
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "$id": "https://raw.githubusercontent.com/openwallet-foundation-labs/eudiplo/refs/heads/main/schemas/CredentialConfigCreate.schema.json",
      "title": "CredentialConfigCreate",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "config": {
          "type": "object"
        },
        "claims": {
          "type": "object"
        },
        "disclosureFrame": {
          "type": "object"
        },
        "vct": {
          "$ref": "./VCT.schema.json"
        },
        "keyBinding": {
          "type": "boolean"
        },
        "keyId": {
          "type": "string"
        },
        "statusManagement": {
          "type": "boolean"
        },
        "lifeTime": {
          "type": "number"
        },
        "schema": {
          "$ref": "./SchemaResponse.schema.json"
        },
        "embeddedDisclosurePolicy": {
          "type": "object",
          "description": "Embedded disclosure policy (discriminated union by `policy`).\nThe discriminator makes class-transformer instantiate the right subclass,\nand then class-validator runs that subclass’s rules."
        }
      },
      "required": ["id", "config"]
    }
  },
  {
    "uri": "https://raw.githubusercontent.com/openwallet-foundation-labs/eudiplo/refs/heads/main/schemas/OfferRequestDto.schema.json",
    "fileMatch": ["a://b/OfferRequestDto.schema.json"],
    "schema": {
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "$id": "https://raw.githubusercontent.com/openwallet-foundation-labs/eudiplo/refs/heads/main/schemas/OfferRequestDto.schema.json",
      "title": "OfferRequestDto",
      "type": "object",
      "properties": {
        "response_type": {
          "enum": ["qrcode", "uri"],
          "type": "string",
          "examples": [
            {
              "value": "qrcode"
            }
          ],
          "description": "The type of response expected for the offer request."
        },
        "claims": {
          "type": "object",
          "description": "Override the default values for the credential claims.",
          "properties": {},
          "examples": [
            {
              "pid": {
                "given_name": "ERIKA",
                "family_name": "MUSTERMANN"
              }
            }
          ]
        },
        "issuanceId": {
          "type": "string",
          "description": "Issuance config id to reference the issuance configuration."
        },
        "credentialConfigurationIds": {
          "description": "Overrides the default values for the credential ids.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "claimsWebhook": {
          "description": "Webhook configuration for claims",
          "allOf": [
            {
              "$ref": "./WebhookConfig.schema.json"
            }
          ]
        },
        "session": {
          "type": "string",
          "description": "Pre defined session id",
          "format": "uuid"
        }
      },
      "required": ["response_type", "issuanceId"]
    }
  },
  {
    "uri": "https://raw.githubusercontent.com/openwallet-foundation-labs/eudiplo/refs/heads/main/schemas/OfferResponse.schema.json",
    "fileMatch": ["a://b/OfferResponse.schema.json"],
    "schema": {
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "$id": "https://raw.githubusercontent.com/openwallet-foundation-labs/eudiplo/refs/heads/main/schemas/OfferResponse.schema.json",
      "title": "OfferResponse",
      "type": "object",
      "properties": {
        "uri": {
          "type": "string"
        },
        "session": {
          "type": "string"
        }
      },
      "required": ["uri", "session"]
    }
  },
  {
    "uri": "https://raw.githubusercontent.com/openwallet-foundation-labs/eudiplo/refs/heads/main/schemas/CredentialConfigMapping.schema.json",
    "fileMatch": ["a://b/CredentialConfigMapping.schema.json"],
    "schema": {
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "$id": "https://raw.githubusercontent.com/openwallet-foundation-labs/eudiplo/refs/heads/main/schemas/CredentialConfigMapping.schema.json",
      "title": "CredentialConfigMapping",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the credential configuration."
        }
      },
      "required": ["id"]
    }
  },
  {
    "uri": "https://raw.githubusercontent.com/openwallet-foundation-labs/eudiplo/refs/heads/main/schemas/IssuanceDto.schema.json",
    "fileMatch": ["a://b/IssuanceDto.schema.json"],
    "schema": {
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "$id": "https://raw.githubusercontent.com/openwallet-foundation-labs/eudiplo/refs/heads/main/schemas/IssuanceDto.schema.json",
      "title": "IssuanceDto",
      "type": "object",
      "properties": {
        "credentialConfigs": {
          "description": "Ids of the credential configurations associated with this issuance configuration.",
          "type": "array",
          "items": {
            "$ref": "./CredentialConfigMapping.schema.json"
          }
        },
        "id": {
          "type": "string",
          "description": "Unique identifier for the issuance configuration."
        },
        "description": {
          "type": "string",
          "description": "Description of the issuance configuration."
        },
        "authenticationConfig": {
          "description": "Authentication configuration for the issuance process.\nThis determines which OpenID4VC flow to use:\n- 'none': Pre-authorized code flow (no user authentication required)\n- 'auth': OID4VCI authorized code flow (user will be redirected for authentication)\n- 'presentationDuringIssuance': OID4VP request is sent (credential presentation required)",
          "allOf": [
            {
              "$ref": "./AuthenticationConfigDto.schema.json"
            }
          ]
        },
        "claimsWebhook": {
          "description": "Webhook to receive claims for the issuance process.",
          "allOf": [
            {
              "$ref": "./WebhookConfig.schema.json"
            }
          ]
        },
        "notifyWebhook": {
          "description": "Webhook to send the result of the notification response",
          "allOf": [
            {
              "$ref": "./WebhookConfig.schema.json"
            }
          ]
        },
        "batch_size": {
          "type": "number",
          "description": "Value to determine the amount of credentials that are issued in a batch.\nDefault is 1."
        }
      },
      "required": ["credentialConfigs", "id", "authenticationConfig"]
    }
  },
  {
    "uri": "https://raw.githubusercontent.com/openwallet-foundation-labs/eudiplo/refs/heads/main/schemas/AuthorizationResponse.schema.json",
    "fileMatch": ["a://b/AuthorizationResponse.schema.json"],
    "schema": {
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "$id": "https://raw.githubusercontent.com/openwallet-foundation-labs/eudiplo/refs/heads/main/schemas/AuthorizationResponse.schema.json",
      "title": "AuthorizationResponse",
      "type": "object",
      "properties": {
        "response": {
          "type": "string",
          "description": "The response string containing the authorization details."
        }
      },
      "required": ["response"]
    }
  },
  {
    "uri": "https://raw.githubusercontent.com/openwallet-foundation-labs/eudiplo/refs/heads/main/schemas/PresentationRequest.schema.json",
    "fileMatch": ["a://b/PresentationRequest.schema.json"],
    "schema": {
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "$id": "https://raw.githubusercontent.com/openwallet-foundation-labs/eudiplo/refs/heads/main/schemas/PresentationRequest.schema.json",
      "title": "PresentationRequest",
      "type": "object",
      "properties": {
        "response_type": {
          "type": "string",
          "description": "The type of response expected from the presentation request.",
          "enum": ["qrcode", "uri"]
        },
        "requestId": {
          "type": "string",
          "description": "Identifier of the presentation configuration"
        },
        "webhook": {
          "description": "Webhook configuration to receive the response.\nIf not provided, the configured webhook from the configuration will be used.",
          "allOf": [
            {
              "$ref": "./WebhookConfig.schema.json"
            }
          ]
        }
      },
      "required": ["response_type", "requestId"]
    }
  },
  {
    "uri": "https://raw.githubusercontent.com/openwallet-foundation-labs/eudiplo/refs/heads/main/schemas/RegistrationCertificateRequest.schema.json",
    "fileMatch": ["a://b/RegistrationCertificateRequest.schema.json"],
    "schema": {
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "$id": "https://raw.githubusercontent.com/openwallet-foundation-labs/eudiplo/refs/heads/main/schemas/RegistrationCertificateRequest.schema.json",
      "title": "RegistrationCertificateRequest",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Identifier of the registration certificate that got issued."
        },
        "body": {
          "type": "object",
          "description": "The body of the registration certificate request containing the necessary details."
        }
      },
      "required": ["body"]
    }
  },
  {
    "uri": "https://raw.githubusercontent.com/openwallet-foundation-labs/eudiplo/refs/heads/main/schemas/PresentationAttachment.schema.json",
    "fileMatch": ["a://b/PresentationAttachment.schema.json"],
    "schema": {
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "$id": "https://raw.githubusercontent.com/openwallet-foundation-labs/eudiplo/refs/heads/main/schemas/PresentationAttachment.schema.json",
      "title": "PresentationAttachment",
      "type": "object",
      "properties": {
        "format": {
          "type": "string"
        },
        "data": {
          "type": "object"
        },
        "credential_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": ["format", "data"]
    }
  },
  {
    "uri": "https://raw.githubusercontent.com/openwallet-foundation-labs/eudiplo/refs/heads/main/schemas/PresentationConfig.schema.json",
    "fileMatch": ["a://b/PresentationConfig.schema.json"],
    "schema": {
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "$id": "https://raw.githubusercontent.com/openwallet-foundation-labs/eudiplo/refs/heads/main/schemas/PresentationConfig.schema.json",
      "title": "PresentationConfig",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the VP request."
        },
        "description": {
          "type": "string",
          "description": "Description of the presentation configuration."
        },
        "lifeTime": {
          "type": "number",
          "description": "Lifetime how long the presentation request is valid after creation, in seconds."
        },
        "dcql_query": {
          "type": "object",
          "description": "The DCQL query to be used for the VP request."
        },
        "registrationCert": {
          "description": "The registration certificate request containing the necessary details.",
          "allOf": [
            {
              "$ref": "./RegistrationCertificateRequest.schema.json"
            }
          ]
        },
        "webhook": {
          "description": "Optional webhook URL to receive the response.",
          "allOf": [
            {
              "$ref": "./WebhookConfig.schema.json"
            }
          ]
        },
        "createdAt": {
          "format": "date-time",
          "type": "string",
          "description": "The timestamp when the VP request was created."
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string",
          "description": "The timestamp when the VP request was last updated."
        },
        "attached": {
          "description": "Attestation that should be attached",
          "type": "array",
          "items": {
            "$ref": "./PresentationAttachment.schema.json"
          }
        }
      },
      "required": ["id", "dcql_query", "createdAt", "updatedAt"]
    }
  },
  {
    "uri": "https://raw.githubusercontent.com/openwallet-foundation-labs/eudiplo/refs/heads/main/schemas/PresentationConfigCreateDto.schema.json",
    "fileMatch": ["a://b/PresentationConfigCreateDto.schema.json"],
    "schema": {
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "$id": "https://raw.githubusercontent.com/openwallet-foundation-labs/eudiplo/refs/heads/main/schemas/PresentationConfigCreateDto.schema.json",
      "title": "PresentationConfigCreateDto",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the VP request."
        },
        "description": {
          "type": "string",
          "description": "Description of the presentation configuration."
        },
        "lifeTime": {
          "type": "number",
          "description": "Lifetime how long the presentation request is valid after creation, in seconds."
        },
        "dcql_query": {
          "type": "object",
          "description": "The DCQL query to be used for the VP request."
        },
        "registrationCert": {
          "description": "The registration certificate request containing the necessary details.",
          "allOf": [
            {
              "$ref": "./RegistrationCertificateRequest.schema.json"
            }
          ]
        },
        "webhook": {
          "description": "Optional webhook URL to receive the response.",
          "allOf": [
            {
              "$ref": "./WebhookConfig.schema.json"
            }
          ]
        },
        "attached": {
          "description": "Attestation that should be attached",
          "type": "array",
          "items": {
            "$ref": "./PresentationAttachment.schema.json"
          }
        }
      },
      "required": ["id", "dcql_query"]
    }
  },
  {
    "uri": "https://raw.githubusercontent.com/openwallet-foundation-labs/eudiplo/refs/heads/main/schemas/Session.schema.json",
    "fileMatch": ["a://b/Session.schema.json"],
    "schema": {
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "$id": "https://raw.githubusercontent.com/openwallet-foundation-labs/eudiplo/refs/heads/main/schemas/Session.schema.json",
      "title": "Session",
      "type": "object",
      "properties": {
        "status": {
          "description": "Status of the session.",
          "enum": ["active", "fetched", "completed", "expired", "failed"],
          "type": "string"
        },
        "id": {
          "type": "string",
          "description": "Unique identifier for the session."
        },
        "issuanceId": {
          "type": "string"
        },
        "requestId": {
          "type": "string",
          "description": "The ID of the presentation configuration associated with the session."
        },
        "requestUrl": {
          "type": "string",
          "description": "The URL of the presentation auth request."
        },
        "credentials": {
          "description": "Verified credentials from the verification process.",
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "authorization_code": {
          "type": "string",
          "description": "Authorization code for the session."
        },
        "request_uri": {
          "type": "string",
          "description": "Request URI from the authorization request."
        },
        "auth_queries": {
          "description": "Authorization queries associated with the session.",
          "allOf": [
            {
              "$ref": "./AuthorizeQueries.schema.json"
            }
          ]
        },
        "vp_nonce": {
          "type": "string",
          "description": "Noncce from the Verifiable Presentation request."
        },
        "nonce": {
          "type": "string",
          "description": "Nonce used for the OID4VCI flow."
        },
        "createdAt": {
          "format": "date-time",
          "type": "string",
          "description": "The timestamp when the VP request was created."
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string",
          "description": "The timestamp when the VP request was last updated."
        },
        "expiresAt": {
          "format": "date-time",
          "type": "string"
        },
        "offer": {
          "type": "object",
          "description": "Credential offer object containing details about the credential offer or presentation request."
        },
        "offerUrl": {
          "type": "string",
          "description": "Offer URL for the credential offer."
        },
        "credentialPayload": {
          "description": "Credential payload containing the offer request details.",
          "allOf": [
            {
              "$ref": "./OfferRequestDto.schema.json"
            }
          ]
        },
        "claimsWebhook": {
          "description": "Webhook configuration to send result and may receive further information.",
          "allOf": [
            {
              "$ref": "./WebhookConfig.schema.json"
            }
          ]
        },
        "notifyWebhook": {
          "description": "Webhook configuration to send the result of the notification response.",
          "allOf": [
            {
              "$ref": "./WebhookConfig.schema.json"
            }
          ]
        },
        "notifications": {
          "description": "Notifications associated with the session.",
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "tenantId": {
          "type": "string",
          "description": "Tenant ID for multi-tenancy support."
        }
      },
      "required": ["status", "id", "createdAt", "updatedAt", "notifications", "tenantId"]
    }
  },
  {
    "uri": "https://raw.githubusercontent.com/openwallet-foundation-labs/eudiplo/refs/heads/main/schemas/StatusUpdateDto.schema.json",
    "fileMatch": ["a://b/StatusUpdateDto.schema.json"],
    "schema": {
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "$id": "https://raw.githubusercontent.com/openwallet-foundation-labs/eudiplo/refs/heads/main/schemas/StatusUpdateDto.schema.json",
      "title": "StatusUpdateDto",
      "type": "object",
      "properties": {
        "sessionId": {
          "type": "string",
          "description": "The session ID of the user"
        },
        "credentialConfigurationId": {
          "type": "string",
          "description": "The ID of the credential configuration\nThis is optional, if not provided, all credentials will be revoked of the session."
        },
        "status": {
          "type": "number",
          "description": "The status of the credential\n0 = valid, 1 = revoked",
          "enum": [0, 1]
        }
      },
      "required": ["sessionId", "status"]
    }
  },
  {
    "uri": "https://raw.githubusercontent.com/openwallet-foundation-labs/eudiplo/refs/heads/main/schemas/ClientCredentialsDto.schema.json",
    "fileMatch": ["a://b/ClientCredentialsDto.schema.json"],
    "schema": {
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "$id": "https://raw.githubusercontent.com/openwallet-foundation-labs/eudiplo/refs/heads/main/schemas/ClientCredentialsDto.schema.json",
      "title": "ClientCredentialsDto",
      "type": "object",
      "properties": {
        "client_id": {
          "type": "string"
        },
        "client_secret": {
          "type": "string"
        }
      },
      "required": ["client_id", "client_secret"]
    }
  },
  {
    "uri": "https://raw.githubusercontent.com/openwallet-foundation-labs/eudiplo/refs/heads/main/schemas/TokenResponse.schema.json",
    "fileMatch": ["a://b/TokenResponse.schema.json"],
    "schema": {
      "$schema": "https://json-schema.org/draft/2020-12/schema",
      "$id": "https://raw.githubusercontent.com/openwallet-foundation-labs/eudiplo/refs/heads/main/schemas/TokenResponse.schema.json",
      "title": "TokenResponse",
      "type": "object",
      "properties": {
        "access_token": {
          "type": "string"
        },
        "refresh_token": {
          "type": "string"
        },
        "token_type": {
          "type": "string"
        },
        "expires_in": {
          "type": "number"
        }
      },
      "required": ["access_token", "token_type", "expires_in"]
    }
  }
]
