apiVersion: apps/v1
kind: Deployment
metadata:
  name: eudiplo
  namespace: eudiplo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: eudiplo
  template:
    metadata:
      labels:
        app: eudiplo
    spec:
      initContainers:
        - name: wait-for-postgres
          image: postgres:16
          env:
            - name: PGUSER
              valueFrom:
                secretKeyRef:
                  name: eudiplo-env
                  key: DB_USERNAME
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: eudiplo-env
                  key: DB_PASSWORD
            - name: PGDATABASE
              valueFrom:
                secretKeyRef:
                  name: eudiplo-env
                  key: DB_DATABASE
          command:
            - sh
            - -c
            - |
              until pg_isready -h postgres -p 5432 -U "$PGUSER" -d "$PGDATABASE"; do
                echo "waiting for postgres..."; sleep 3;
              done
        - name: wait-for-minio
          image: busybox:1.36
          command:
            - sh
            - -c
            - |
              until wget -qO- http://minio:9000/minio/health/ready >/dev/null 2>&1; do
                echo "waiting for minio..."; sleep 3;
              done
      containers:
        - name: eudiplo
          image: ghcr.io/openwallet-foundation-labs/eudiplo:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3000
          envFrom:
            - secretRef:
                name: eudiplo-env
          env:
            - name: DB_HOST
              value: "postgres"
            - name: DB_PORT
              value: "5432"
            - name: S3_ENDPOINT
              value: "http://minio:9000"
          readinessProbe:
            httpGet:
              path: /health
              port: 3000
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /health
              port: 3000
            initialDelaySeconds: 20
            periodSeconds: 20
            timeoutSeconds: 5
            failureThreshold: 3
          startupProbe:
            httpGet:
              path: /health
              port: 3000
            periodSeconds: 10
            failureThreshold: 5
          resources:
            requests:
              cpu: "100m"
              memory: "256Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"
