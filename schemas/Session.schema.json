{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://raw.githubusercontent.com/openwallet-foundation-labs/eudiplo/refs/heads/main/schemas/Session.schema.json",
  "title": "Session",
  "type": "object",
  "properties": {
    "status": {
      "description": "Status of the session.",
      "enum": [
        "active",
        "fetched",
        "completed",
        "expired",
        "failed"
      ],
      "type": "string"
    },
    "id": {
      "type": "string",
      "description": "Unique identifier for the session."
    },
    "createdAt": {
      "format": "date-time",
      "type": "string",
      "description": "The timestamp when the request was created."
    },
    "updatedAt": {
      "format": "date-time",
      "type": "string",
      "description": "The timestamp when the request was last updated."
    },
    "expiresAt": {
      "format": "date-time",
      "type": "string",
      "description": "The timestamp when the request is set to expire."
    },
    "useDcApi": {
      "type": "boolean",
      "description": "Flag indicating whether to use the DC API for the presentation request."
    },
    "tenantId": {
      "type": "string",
      "description": "Tenant ID for multi-tenancy support."
    },
    "tenant": {
      "description": "The tenant that owns this object.",
      "allOf": [
        {
          "$ref": "./TenantEntity.schema.json"
        }
      ]
    },
    "issuanceId": {
      "type": "string"
    },
    "authorization_code": {
      "type": "string",
      "description": "Authorization code for the session."
    },
    "request_uri": {
      "type": "string",
      "description": "Request URI from the authorization request."
    },
    "auth_queries": {
      "description": "Authorization queries associated with the session.",
      "allOf": [
        {
          "$ref": "./AuthorizeQueries.schema.json"
        }
      ]
    },
    "nonce": {
      "type": "string",
      "description": "Nonce used for the OID4VCI flow."
    },
    "offer": {
      "type": "object",
      "description": "Credential offer object containing details about the credential offer or presentation request."
    },
    "offerUrl": {
      "type": "string",
      "description": "Offer URL for the credential offer."
    },
    "credentialPayload": {
      "description": "Credential payload containing the offer request details.",
      "allOf": [
        {
          "$ref": "./OfferRequestDto.schema.json"
        }
      ]
    },
    "claimsWebhook": {
      "description": "Webhook configuration to send result and may receive further information.",
      "allOf": [
        {
          "$ref": "./WebhookConfig.schema.json"
        }
      ]
    },
    "notifyWebhook": {
      "description": "Webhook configuration to send the result of the notification response.",
      "allOf": [
        {
          "$ref": "./WebhookConfig.schema.json"
        }
      ]
    },
    "notifications": {
      "description": "Notifications associated with the session.",
      "type": "array",
      "items": {
        "type": "object"
      }
    },
    "requestId": {
      "type": "string"
    },
    "requestUrl": {
      "type": "string",
      "description": "The URL of the presentation auth request."
    },
    "requestObject": {
      "type": "string",
      "description": "Signed presentation auth request."
    },
    "credentials": {
      "description": "Verified credentials from the presentation process.",
      "type": "array",
      "items": {
        "type": "object"
      }
    },
    "vp_nonce": {
      "type": "string",
      "description": "Noncce from the Verifiable Presentation request."
    },
    "redirectUri": {
      "type": "string",
      "description": "Redirect URI to which the user-agent should be redirected after the presentation is completed."
    }
  },
  "required": [
    "status",
    "id",
    "createdAt",
    "updatedAt",
    "useDcApi",
    "tenantId",
    "tenant",
    "notifications"
  ]
}